name: Trivy SCA

on:
  push:
      branches: [ "main" ]
  schedule:
    - cron: 0 12 * * 1
  # At 12:00 on Monday.
    
jobs:
    Trivy-Scan:
      permissions:
        contents: read # for actions/checkout to fetch code
        security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      name: Build
      runs-on: "ubuntu-20.04"
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
          
        - name: Running a scan with a sarif file as an output
          uses: aquasecurity/trivy-action@master
          id: scan1
          with:
            scan-type: 'fs'
            format: 'template'
            template: '@/contrib/sarif.tpl'
            output: 'trivy-results.sarif'
            severity: 'LOW,MEDIUM,CRITICAL,HIGH'
            
        - name: Running a scan with a json file as an output
          uses: aquasecurity/trivy-action@master
          id: scan2
          with:
            scan-type: 'fs'
            format: 'json'
            output: 'trivy-results.json'
            severity: 'LOW,MEDIUM,CRITICAL,HIGH'
            
        - name: Save the json vulnerability report to an artifact
          uses: actions/upload-artifact@v4
          with:
            name: trivy-results.json
            path: ${{ steps.scan1.outputs.json }}  
            
        - name: Upload Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: 'trivy-results.sarif'
          
    Data_Analysis:
      name: Data Analysis
      needs: Trivy-Scan
      runs-on: ubuntu-latest
      steps:
        - name: Check out the code 
          uses: actions/checkout@v3

        - name: Download result for job Trivy-Scan
          uses: actions/download-artifact@v4
          with:
            name: trivy_results
            path: scan/
        
        - name: setup python
          uses: actions/setup-python@v4
          with:
            python-version: '3.10' # install the python version needed

        - name: install python packages
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
    
        - name: Running the Python Script
          run: python script.py scan/trivy_results.json "Trivy.txt" "ONOS" > results.json 
        

        - name: Save the json vulnerability report to an artifact
          uses: actions/upload-artifact@master
          with:
            name: results_data_analysis
            path: results.json
  
  